// Mocks generated by Mockito 5.3.2 from annotations
// in pepcorns_llp/test/core/api/web_services_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pepcorns_llp/core/api/web_services.dart' as _i2;
import 'package:pepcorns_llp/model/payment.dart' as _i5;
import 'package:pepcorns_llp/model/users.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WebServices].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebServices extends _i1.Mock implements _i2.WebServices {
  MockWebServices() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Users?> getAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsers,
          [],
        ),
        returnValue: _i3.Future<_i4.Users?>.value(),
      ) as _i3.Future<_i4.Users?>);
  @override
  _i3.Future<_i4.Users?> getUserWithId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUserWithId,
          [id],
        ),
        returnValue: _i3.Future<_i4.Users?>.value(),
      ) as _i3.Future<_i4.Users?>);
  @override
  _i3.Future<_i5.Payment?> getAllPayments() => (super.noSuchMethod(
        Invocation.method(
          #getAllPayments,
          [],
        ),
        returnValue: _i3.Future<_i5.Payment?>.value(),
      ) as _i3.Future<_i5.Payment?>);
  @override
  _i3.Future<_i5.Payment?> getPaymentWithId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPaymentWithId,
          [id],
        ),
        returnValue: _i3.Future<_i5.Payment?>.value(),
      ) as _i3.Future<_i5.Payment?>);
}
